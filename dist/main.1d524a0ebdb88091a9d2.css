/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
.home__hero__slideImage img, .home__hero__slideImage, .home__hero__sliderOverlay, .home {
  position: absolute;
  height: 100%;
  width: 100%;
  left: 0;
  top: 0;
}

.dg.ac {
  z-index: 99999 !important;
}

.home__hero__title {
  font-family: "Dharma Gothic";
  font-size: 12rem;
  line-height: 84.5%;
  letter-spacing: -0.01em;
  text-transform: uppercase;
}
@media (max-width: 767px) {
  .home__hero__title {
    font-size: 6.5rem;
  }
}

.home__hero__slogan {
  font-family: "Optician Sans";
  font-size: 1rem;
  line-height: 84.5%;
  letter-spacing: -0.01em;
  text-transform: uppercase;
}

.hero__home__controls--right, .hero__home__controls--left, .home__hero__counter, .cta {
  font-family: "Optician Sans";
  font-size: 1.2rem;
  line-height: 93.5%;
  letter-spacing: -0.01em;
  text-transform: uppercase;
}

.home__hero__caption, .navigation__link {
  font-family: "Optician Sans";
  font-size: 1.4rem;
  letter-spacing: -0.01em;
}

body {
  font-family: "Silka";
  font-size: 1.5rem !important;
  font-weight: 300;
  line-height: 150%;
  letter-spacing: -0.01em;
}

@font-face {
  font-family: "Dharma Gothic";
  src: local("Dharma Gothic E Bold"), local("DharmaGothicE-Bold"), url(cd3c91d1839627745e6d.woff2) format("woff2"), url(1d35f5f405d586f0445c.woff) format("woff");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Dharma Gothic";
  src: local("Dharma Gothic E Regular"), local("DharmaGothicE-Regular"), url(f3307985174eb702b44a.woff2) format("woff2"), url(1775302f248fc18518b2.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Optician Sans";
  src: local("Optician Sans Regular"), local("OpticianSans-Regular"), url(92d1f068ff2035190892.woff2) format("woff2"), url(280799540722a46a28f7.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Silka";
  src: local("Silka Light"), local("Silka-Light"), url(a856b8dfdcd8ff720493.woff2) format("woff2"), url(df1a6c16f0aa8f85b6b0.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Silka";
  src: local("Silka Regular"), local("Silka-Regular"), url(176893a2be3d36f22219.woff2) format("woff2"), url(45e4b622dfbada91f314.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

html {
  font-size: calc(100vw / 1440 * 10);
  background-color: #FAFAFA;
  -moz-osx-font-smoothing: grayscale;
  /*(For Firefox)*/
  -webkit-font-smoothing: antialiased;
  /*(For Chrome and Safari)*/
}
@media (max-width: 767px) {
  html {
    font-size: calc(100vw / 375 * 10);
  }
}

body {
  color: #0D0D0D;
  font-family: "Silka";
}

a {
  text-decoration: none;
  color: inherit;
}

img {
  vertical-align: middle;
}

[data-animation=title] span {
  display: inline-block;
  overflow: hidden;
  vertical-align: top;
}

button {
  background-color: transparent;
  border: none;
  padding: 0;
}
button:hover {
  cursor: pointer;
}

.cta {
  color: #E0B472;
  position: relative;
}

.cta__icon:after {
  content: url(./assets/5a90ce0334b03a4fdc49.svg);
  position: absolute;
  width: 1.4rem;
  height: 1.4rem;
  top: -0.2rem;
  margin-left: 1.4rem;
  transition: transform 1.5s cubic-bezier(0.19, 1, 0.22, 1);
  transform-origin: 50% 50%;
}

.cta__icon:hover:after {
  transform: rotate(180deg);
}

.l-container {
  margin: 0 15rem;
}
@media (max-width: 767px) {
  .l-container {
    margin: 0 2rem;
  }
}

.navigation__desktop {
  position: absolute;
  top: 3.9rem;
  width: 100%;
  display: none;
  z-index: 999999;
}
@media (min-width: 768px) {
  .navigation__desktop {
    display: block;
  }
}

.navigation__container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.navigation__left {
  display: flex;
  align-items: center;
}

.navigation__logo {
  width: 5.2rem;
  height: 5.2rem;
}

.navigation__link {
  margin-right: 2rem;
  color: #FAFAFA;
}

.navigation__right {
  display: flex;
  align-items: center;
}

.navigation__right li:last-child .navigation__link {
  margin-right: 0;
}

.home__hero__upper {
  display: flex;
  position: relative;
  padding-top: 16.9rem;
  z-index: 4;
}
@media (max-width: 767px) {
  .home__hero__upper {
    flex-direction: column;
  }
}

.home__hero__counter {
  color: #E0B472;
  margin-right: 7.4rem;
  margin-bottom: 4.6rem;
  align-self: flex-end;
}
@media (max-width: 767px) {
  .home__hero__counter {
    margin-bottom: 1.1rem;
    align-self: flex-start;
  }
}

.home__hero__titleContainer {
  position: relative;
}

.home__hero__title {
  color: #FAFAFA;
  max-width: 72.5rem;
}

.home__hero__wave {
  position: absolute;
  width: 28.1rem;
  height: auto;
  right: 5rem;
  bottom: 0;
}
.home__hero__wave svg {
  width: 100%;
}
@media (max-width: 767px) {
  .home__hero__wave {
    right: 2rem;
    width: 14.4rem;
    height: auto;
  }
}

.home__hero__quickAccess {
  display: flex;
  flex-direction: column;
  margin-bottom: 7.8rem;
  margin-right: 2.5rem;
  align-items: flex-end;
  justify-content: flex-end;
  flex-grow: 3;
}
@media (max-width: 767px) {
  .home__hero__quickAccess {
    margin-top: 3rem;
    align-items: flex-start;
    flex-grow: 1;
    margin-bottom: 0;
  }
}

.home__hero__caption {
  display: inline-block;
  margin-bottom: 0.5rem;
  color: #E0B472;
}

.home__hero__background {
  background-color: #005133;
  z-index: -1;
  width: 100%;
  height: 55.1rem;
  position: absolute;
  top: 0;
  left: 0;
}

.home__hero__sliderContent {
  position: relative;
  margin-top: 36.4rem;
}
@media (max-width: 767px) {
  .home__hero__sliderContent {
    margin-top: 30.6rem;
  }
}

.home__hero__sliderContentWrapper {
  display: flex;
  width: 100%;
  flex-wrap: wrap;
  justify-content: space-between;
}
@media (max-width: 767px) {
  .home__hero__sliderContentWrapper {
    padding-bottom: 3rem;
  }
}

.home__hero__slogan {
  transform: rotate(-90deg);
  color: #E0B472;
  width: 0;
  white-space: nowrap;
  text-align: left;
  transform-origin: bottom;
  margin-bottom: -3rem;
  margin-left: 5rem;
}
@media (max-width: 767px) {
  .home__hero__slogan {
    display: none;
  }
}

.hero__home__controls {
  display: flex;
  align-items: center;
  z-index: 4;
}
.hero__home__controls--left {
  color: #FAFAFA;
}
.hero__home__controls--line {
  display: block;
  height: 1px;
  width: 38px;
  margin: 0 1.7rem;
  background-color: #FAFAFA;
  opacity: 0.5;
}
.hero__home__controls--right {
  color: #FAFAFA;
}

.home__hero__socials {
  position: absolute;
  margin-right: -7rem;
  z-index: 4;
  right: 0;
  bottom: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
@media (max-width: 767px) {
  .home__hero__socials {
    flex-direction: row;
    left: 0;
    right: unset;
  }
}

.home__hero__socialLink {
  margin-bottom: 2rem;
}
.home__hero__socialLink:last-child {
  margin-bottom: 0;
}
@media (max-width: 767px) {
  .home__hero__socialLink {
    margin-bottom: 0;
    margin-right: 2rem;
  }
}

.home__hero__slider {
  overflow: hidden;
  position: absolute;
  top: 31.4rem;
  right: 0;
  width: 119.3rem;
  height: 49.6rem;
}
@media (max-width: 767px) {
  .home__hero__slider {
    max-width: 100vw;
  }
}

.home__hero__sliderOverlay {
  background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.6));
  z-index: 3;
}

.home__hero__slideImage {
  overflow: hidden;
}
.home__hero__slideImage:not(:nth-child(2)) {
  visibility: hidden;
  opacity: 0;
}
.home__hero__slideImage img {
  object-fit: cover;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/